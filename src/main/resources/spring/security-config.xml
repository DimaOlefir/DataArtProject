<?xml version="1.0" encoding="UTF-8"?>

<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="
                    http://www.springframework.org/schema/beans
                    http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
                    http://www.springframework.org/schema/security
                    http://www.springframework.org/schema/security/spring-security-4.2.xsd">
    <!--<global-method-security authentication-manager-ref="authenticationManager" pre-post-annotations="enabled"/>-->
    <global-method-security pre-post-annotations="enabled"/>
    <!--<http>
        <intercept-url pattern="/resources/partials/protected/*" access="hasAnyRole('USER', 'ADMIN')"/>-->

        <!-- login-processing-url="/j_spring_security_check" -->
        <!--<form-login login-page="/login"
                    default-target-url="/welcome"
                    authentication-failure-url="/login?error"
                    username-parameter="username" password-parameter="password"/>-->

    <!-- <http-basic entry-point-ref="http403ForbiddenEntryPoint"/>
     <csrf token-repository-ref="customCsrfTokenRepository"/>
     <custom-filter after="CSRF_FILTER" ref="customCsrfHeaderFilter"/>
     <remember-me key="DEVELNOTES_REMEMBER_TOKEN" services-ref="rememberMeServices" />
     I don't know why IDEA underlined the CSRF_FILTER, but app works anyway-->

        <!-- <logout logout-success-url="/login?logout"/>-->
    <!-- </http> -->

    <http pattern="/api/login" security="none"/>
    <http pattern="/api/register" security="none"/>
    <http pattern="/api/test" security="none"/>

    <http pattern="/api/**" entry-point-ref="restAuthenticationEntryPoint" create-session="stateless">
        <!--<cors configuration-source-ref="corsSource"/>-->
        <csrf disabled="true"/>
        <custom-filter before="FORM_LOGIN_FILTER" ref="jwtAuthenticationFilter"/>
    </http>

    <!--<beans:bean id="corsSource" class="com.dataart.config.CorsFilter">
        <beans:bean id="corsSource" class="org.springframework.web.cors.UrlBasedCorsConfigurationSource">
            <property name="corsConfigurations">
                <util:map>
                    <entry key="/**">
                        <bean class="org.springframework.web.cors.CorsConfiguration">
                            <property name="allowCredentials" value="true" />
                            <property name="allowedHeaders">
                                <list>
                                    <value>Authorization</value>
                                    <value>Content-Type</value>
                                </list>
                            </property>
                            <property name="allowedMethods">
                                <list>
                                    <value>POST</value>
                                    <value>GET</value>
                                    <value>PUT</value>
                                    <value>DELETE</value>
                                </list>
                            </property>
                            <property name="allowedOrigins" value="${cors.allowed.origins}" />
                            <property name="exposedHeaders">
                                <list>
                                    <value>Location</value>
                                </list>
                            </property>
                            <property name="maxAge" value="86400" />
                        </bean>
                    </entry>
                </util:map>
            </property>

</beans:bean>

-->
    <beans:bean id="jwtAuthenticationFilter" class="com.dataart.security.JwtAuthenticationFilter">
        <beans:property name="authenticationManager" ref="authenticationManager"/>
        <beans:property name="authenticationSuccessHandler" ref="jwtAuthenticationSuccessHandler"/>
    </beans:bean>

    <authentication-manager alias="authenticationManager">
        <authentication-provider ref="jwtAuthenticationProvider"/>
            <!--<password-encoder ref="encoder"/>-->
        <!--</authentication-provider>-->
    </authentication-manager>

<!--<beans:bean id="userDetailsServiceImpl"
        class="com.dataart.service.security.UserDetailsServiceImpl"/>-->

    <beans:bean id="encoder"
                class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
        <beans:constructor-arg name="strength" value="11"/>
    </beans:bean>
</beans:beans>